[{"/home/stephen/whist-singleplayer/src/index.js":"1","/home/stephen/whist-singleplayer/src/App.js":"2","/home/stephen/whist-singleplayer/src/Home.js":"3","/home/stephen/whist-singleplayer/src/SinglePlayerGame.js":"4","/home/stephen/whist-singleplayer/src/components/Player.js":"5","/home/stephen/whist-singleplayer/src/components/Header.js":"6","/home/stephen/whist-singleplayer/src/components/MiddleCard.js":"7","/home/stephen/whist-singleplayer/src/components/Slider.js":"8","/home/stephen/whist-singleplayer/src/components/Cards.js":"9","/home/stephen/whist-singleplayer/src/components/Card.js":"10","/home/stephen/whist-singleplayer/src/components/ScoreBoard.js":"11"},{"size":219,"mtime":1607281517979,"results":"12","hashOfConfig":"13"},{"size":566,"mtime":1610643123029,"results":"14","hashOfConfig":"13"},{"size":697,"mtime":1610410046989,"results":"15","hashOfConfig":"13"},{"size":4064,"mtime":1610663810082,"results":"16","hashOfConfig":"13"},{"size":1594,"mtime":1607296719599,"results":"17","hashOfConfig":"13"},{"size":1307,"mtime":1607289259405,"results":"18","hashOfConfig":"13"},{"size":1229,"mtime":1607294497099,"results":"19","hashOfConfig":"13"},{"size":1165,"mtime":1607302925597,"results":"20","hashOfConfig":"13"},{"size":554,"mtime":1607271968875,"results":"21","hashOfConfig":"13"},{"size":501,"mtime":1607216201287,"results":"22","hashOfConfig":"13"},{"size":974,"mtime":1607216042255,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1yhsxn1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/stephen/whist-singleplayer/src/index.js",[],["52","53"],"/home/stephen/whist-singleplayer/src/App.js",["54"],"import React from 'react'\nimport {\n    BrowserRouter as Router,\n        Switch,\n        Route,\n        Link\n      } from \"react-router-dom\";\nimport SinglePlayerGame from './SinglePlayerGame'\nimport Home from './Home'\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/singleplayer-game\" component={SinglePlayerGame} />\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App\n\n","/home/stephen/whist-singleplayer/src/Home.js",["55","56","57"],"import React from 'react'\nimport {\n    BrowserRouter as Router,\n        Switch,\n        Route,\n        Link\n      } from \"react-router-dom\";\nimport './Home.scss'\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"app center\">\n                <div className=\"home center\">\n                    <div className=\"logo\">\n                        <img src={\"/logo.png\"} alt=\"logo\" />\n                    </div>\n                    <button className=\"button\">\n                        <Link to=\"/singleplayer-game\" className=\"link\">Singleplayer</Link>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App","/home/stephen/whist-singleplayer/src/SinglePlayerGame.js",["58","59"],"import './Game.scss'\nimport React from 'react'\nimport Header from './components/Header'\nimport Player from './components/Player'\nimport MiddleCard from './components/MiddleCard'\nimport ContinuousSlider from './components/Slider'\nimport socketIOClient from 'socket.io-client'\n\nconst SOCKET_SERVER_URL = \"http://localhost:5000\"\n\nlet socket\n\nclass SinglePlayerGame extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n    }\n    componentDidMount() {\n        socket = socketIOClient(SOCKET_SERVER_URL)\n        socket.on(\"connect\", () => {\n            socket.emit(\"enter game\", \"singleplayer\")\n        })\n        socket.on(\"reset\", (game) => {\n            this.setState({game})\n            socket.emit(\"enter game\", \"singleplayer\")\n        })\n        socket.on(\"init\", ( [player_id, game]) => {\n            this.setState({player_id, game, loading: false})\n        })\n        socket.on(\"start game\", (game, player_id) => {\n            this.setState({game, gameRunning: true})\n        })\n        socket.on(\"run ai\", () => {\n            socket.emit(\"run ai\")\n        })\n        socket.on(\"update client\", (game) => {\n            this.setState({game})\n        })\n        socket.on(\"update players\", (game) => {\n            this.setState({game})\n        })\n        socket.on(\"end of trick\", (game) => {\n            this.setState({game})\n            socket.emit(\"end of trick\")\n        })\n        socket.on(\"game finished\", (winner_id) => {\n            this.setState({gameFinished: true, winner_id, gameRunning: false})\n        })\n    }\n    playCard = (index, card, position) => {\n        if(position !== \"bottom\") {\n            return\n        }\n        let {game} = this.state\n        let {player_id} = this.state\n        if(game.players[player_id].state !== \"PLAY\") {\n            console.log(\"not your turn\")\n            return\n        }\n        socket.emit(\"card played\", [index, card])\n    }\n    updateSpeed = (value) => {\n        const newSpeed = value\n        this.setState(prevState => {\n            let game = prevState.game\n            game.speed = value\n            return { game }\n        })\n        socket.emit(\"update speed\", this.state.game.speed)\n    }\n    render() {\n        if(this.state.loading) {\n            return null\n        }\n        if(this.state.gameFinished) {\n            const state = this.state\n            const teams = state.game.teams\n            if(state.winner_id === state.game.players[state.player_id].teamId) {\n                return (\n                    <div className=\"game-finished-message center2\" style={{\"backgroundColor\": \"#26d426\"}}>\n                        <h1>Your team won the game! &#128516;</h1>\n                    </div>\n                )\n            } else {\n                return (\n                    <div className=\"game-finished-message center2\" style={{\"backgroundColor\": \"#df1d1d\"}}>\n                        <h1>Your team lost the game &#128528;</h1>\n                    </div>\n                )\n            }\n        }\n        const state = this.state\n        const game = this.state.game\n        const positions = [[1, \"bottom\", \"you\"], [2, \"left\", \"opponent 1\"],\n            [3, \"top\", \"team mate\"], [4, \"right\", \"opponent 2\"]];\n        const middleCards = positions.map((position) =>\n            <MiddleCard state={state} playerId={position[0]} position={position[1]} />\n        )\n        const players = positions.map((position) =>\n            <Player playerId={position[0]} position={position[1]}\n                name={position[2]} state={state} playCard={this.playCard} />\n        )\n        return (\n            <div className=\"game\">\n                <Header state={this.state} messages={this.state.game.messages} newValue={this.updateSpeed} />\n                <ContinuousSlider value={game.speed} newValue={this.updateSpeed} />\n                <div className=\"middle-area\">\n                    {middleCards}\n                </div>\n                {players}\n            </div>\n        )\n    }\n}\n\nexport default SinglePlayerGame;","/home/stephen/whist-singleplayer/src/components/Player.js",[],"/home/stephen/whist-singleplayer/src/components/Header.js",["60"],"import '../Game.scss'\nimport React from 'react'\nimport ScoreBoard from './ScoreBoard'\nimport ContinuousSlider from './Slider'\n\nclass Header extends React.Component {\n    handleValueChange = (newValue) => {\n        this.props.newValue(newValue)\n    }\n    render() {\n        const state = this.props.state\n        const game = state.game\n        const teams = game.teams\n        const player_id = state.player_id\n        const playerTeamId = state.game.players[player_id].teamId\n        const otherTeamId = teams[playerTeamId].otherTeamId\n\n        const messageList = Object.values(game.messages).map((message) =>\n            <li>{message}</li>\n        )\n        let header\n        if(state.gameRunning) {\n            header = (\n                <div className=\"header\">\n                    <ScoreBoard type=\"tricks\" v1={teams[playerTeamId].tricks} v2={teams[otherTeamId].tricks} />\n                    <div className=\"center2\">\n                        <ul>\n                            {messageList}\n                        </ul>\n                    </div>\n                    <ScoreBoard type=\"score\" v1={teams[playerTeamId].score} v2={teams[otherTeamId].score} />\n                </div>\n            )\n            return header\n        } else {\n            return null\n        }\n    }\n}\n\nexport default Header","/home/stephen/whist-singleplayer/src/components/MiddleCard.js",[],"/home/stephen/whist-singleplayer/src/components/Slider.js",["61","62","63","64","65"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\n\nclass ContinuousSlider extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: 50\n        }\n    }\n    handleChange = (event, newValue) => {\n        this.setState({value: newValue})\n        this.props.newValue(newValue)\n        console.log(newValue)\n    }\n    render() {\n        const value = this.state.value\n        return (\n            <div className=\"speed-slider center2\">\n              <p>Game Speed</p>\n              <Grid container spacing={2}>\n                <Grid item xs>\n                    <Slider defaultValue={50} aria-labelledby=\"discrete-slider\"\n                        step={10} marks min={10} max={100} onChange={this.handleChange} />\n                </Grid>\n              </Grid>\n            </div>\n          )\n    }\n}\n\nexport default ContinuousSlider","/home/stephen/whist-singleplayer/src/components/Cards.js",[],"/home/stephen/whist-singleplayer/src/components/Card.js",[],"/home/stephen/whist-singleplayer/src/components/ScoreBoard.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":6,"column":9,"nodeType":"72","messageId":"73","endLine":6,"endColumn":13},{"ruleId":"70","severity":1,"message":"74","line":3,"column":22,"nodeType":"72","messageId":"73","endLine":3,"endColumn":28},{"ruleId":"70","severity":1,"message":"75","line":4,"column":9,"nodeType":"72","messageId":"73","endLine":4,"endColumn":15},{"ruleId":"70","severity":1,"message":"76","line":5,"column":9,"nodeType":"72","messageId":"73","endLine":5,"endColumn":14},{"ruleId":"70","severity":1,"message":"77","line":65,"column":15,"nodeType":"72","messageId":"73","endLine":65,"endColumn":23},{"ruleId":"70","severity":1,"message":"78","line":79,"column":19,"nodeType":"72","messageId":"73","endLine":79,"endColumn":24},{"ruleId":"70","severity":1,"message":"79","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":24},{"ruleId":"70","severity":1,"message":"80","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":20},{"ruleId":"70","severity":1,"message":"81","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":18},{"ruleId":"70","severity":1,"message":"82","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":18},{"ruleId":"70","severity":1,"message":"83","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":16},{"ruleId":"70","severity":1,"message":"84","line":22,"column":15,"nodeType":"72","messageId":"73","endLine":22,"endColumn":20},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'newSpeed' is assigned a value but never used.","'teams' is assigned a value but never used.","'ContinuousSlider' is defined but never used.","'makeStyles' is defined but never used.","'Typography' is defined but never used.","'VolumeDown' is defined but never used.","'VolumeUp' is defined but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]